{
	"info": {
		"_postman_id": "5b6e7351-2342-47be-aebf-8e5e669708c3",
		"name": "Stat Sniper",
		"description": "# ðŸš€ Stat Sniper\n\nCheck out FE folder for interacting with the Express server\n\nThe Steam folder has some endpoints to hit for app details",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6192449"
	},
	"item": [
		{
			"name": "Steam",
			"item": [
				{
					"name": "Get app details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://store.steampowered.com/api/appdetails?appids=70",
							"protocol": "https",
							"host": [
								"store",
								"steampowered",
								"com"
							],
							"path": [
								"api",
								"appdetails"
							],
							"query": [
								{
									"key": "key",
									"value": "",
									"disabled": true
								},
								{
									"key": "appids",
									"value": "70"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get All Apps ISteamApps (LOTS of date)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.steampowered.com/ISteamApps/GetAppList/v2/",
							"protocol": "https",
							"host": [
								"api",
								"steampowered",
								"com"
							],
							"path": [
								"ISteamApps",
								"GetAppList",
								"v2",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "",
									"disabled": true
								},
								{
									"key": "type_filter",
									"value": "game",
									"disabled": true
								},
								{
									"key": "max_results",
									"value": "50",
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get All Apps IstoreService",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.steampowered.com/IStoreService/GetAppList/v1/?key={{steamId}}&include_games=true&max_results=50",
							"protocol": "https",
							"host": [
								"api",
								"steampowered",
								"com"
							],
							"path": [
								"IStoreService",
								"GetAppList",
								"v1",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{steamId}}"
								},
								{
									"key": "include_games",
									"value": "true"
								},
								{
									"key": "max_results",
									"value": "50"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "FE",
			"item": [
				{
					"name": "Get Games from steamId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/steam/apps/:steamId=76561197982486651",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"steam",
								"apps",
								":steamId=76561197982486651"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "steamId=76561197982486651",
									"value": ""
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Post create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userName\": \"76561198037891993\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "localhost:3002/v1"
		},
		{
			"key": "steamId",
			"value": "76561198037891993",
			"type": "string"
		}
	]
}